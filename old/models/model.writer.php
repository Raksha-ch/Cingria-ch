<?php

///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//   																																	  
//   	SCRIPT SUMMARY (2010.04.13)  (n.b.: this file is included by switch.writer.php)                                                                                                       	  
//   																																	  
//   	**************************************************************************************************************************************
//   																																	  
//   	0) INITIALIZE VARS  
//		1) CONSTRUCTOR 
//		2) GETTERS & SETTERS  | Crud | ErrorFlag | ProfileEmailAddress | ProfileName | ProfilePassword | ProfileSurname | Redir | Table |
//		3) WRITINGS 
//	   			3.1) Create Writing
//	   			3.2) Edit Writing
//	   			3.3) Delete Writing
//		4) NEWS 
//	   			4.1) Create News
//	   			4.2) Edit News
//	   			4.3) Delete News
//		5) CHECKS
//				5.1) Check Title
// 				5.2) Check Template
// 				5.3) Check Category
//		6) INFO 
//	   			6.1) Profile Info                                                                                               
//                                                                                                                                                                                                                                                                                                                                 
///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////


class Writer {
	

//  ******************************************************************************************************************************************
//  0) INITIALIZE VARS                                                                                                                               
//  ******************************************************************************************************************************************	


//  ------------------------------------------------------------------------------------------------------------------------------------------



//  ******************************************************************************************************************************************
//  1) CONSTRUCTOR                                                                                                                               
//  ******************************************************************************************************************************************	

	function __construct() {
		$this->setErrorFlag(0);
	}

//  ------------------------------------------------------------------------------------------------------------------------------------------




//  ******************************************************************************************************************************************
//  2) GETTERS & SETTERS                                                                                                                                
//  ****************************************************************************************************************************************** 

	function setCrud($crud) 									{ $this->crud = $crud; }
	
	function setWritingTitle($_writing_title) 					{ $this->_writing_title = $_writing_title; }
	function getWritingTitle() 									{ return $this->_writing_title; }
		
	function setTable($_tbl) 									{ $this->_tbl = $_tbl; }
	function getTable() 										{ return $this->_tbl; }
	
	function setRedir($_redir) 									{ $this->_redir = $_redir; }
	function getRedir() 										{ return $this->_redir; }
	
	function setErrorFlag($_error_flag) 						{ $this->_error_flag = $_error_flag; }	
	function getErrorFlag() 									{ return $this->_error_flag; }

//  ------------------------------------------------------------------------------------------------------------------------------------------




//  ******************************************************************************************************************************************
//  3) WRITING                                                                                                                                
//  ******************************************************************************************************************************************

//  ------------------------------------------------------------------------------------------------------------------------------------------ 
// 	3.1) Create Writing
//  ------------------------------------------------------------------------------------------------------------------------------------------

	function createWriting() {
		
		try {
			
			if ( $this->crud->insert( $this->getTable() , $this->crud->getMatchingFields( $this->getTable() ) ) ) { 
				
				$serialized_info = serialize( $this->WritingInfo() );	
				header("location: ".$this->getRedir().'&info_box=created&serialized_info=' . $serialized_info );
			
			}
			else {
				
	  			$this->setErrorFlag( 1 );
				throw new myExceptions( 'The new writing couldn\'t be created</em>.' );

			}
			
		}
		
		catch ( myExceptions $e ) {
			
			print $e->getError();
		
		}	
					
	}

//  ------------------------------------------------------------------------------------------------------------------------------------------ 
// 	3.2) Edit Writing
//  ------------------------------------------------------------------------------------------------------------------------------------------

	function editWriting() {
		
		try {
				
			if ( $this->crud->update( $this->getTable() , $this->crud->getMatchingFields( $this->getTable() ) , 'writing_id' , $_POST['writing_id'] ) ) 			
			
			{ 
			
				$serialized_info = serialize( $this->WritingInfo() );	
				header( "location: " . $this->getRedir() . '&info_box=edited&serialized_info=' . $serialized_info );
				
			}
			
			else {	
				
				$this->setErrorFlag( 1 );
				throw new myExceptions( 'The writing couldn\'t be edited.' );
				
			}
				
		}
		
		catch ( myExceptions $e ) {
			
			print $e->getError();	
					
		}
				
	}


//  ------------------------------------------------------------------------------------------------------------------------------------------ 
// 	3.3) Delete Writing
//  ------------------------------------------------------------------------------------------------------------------------------------------

  	function deleteWriting( $writing_field , $writing_id ) {	
  	  
  	  try {
	
  	  	if ( $this->crud->delete( $this->getTable() , $writing_field , '=' , $writing_id ) ) {
	
  	  		header("location: ".$this->getRedir());	
  	
  		}
  	
  		else {
  	    		$this->setErrorFlag(1);
  				throw new myExceptions('The writing <em>#'.$writing_id.'</em> couldn\'t be deleted from table <em>'.$this->getTable().'</em>.');
  	  	}
  	  
	  }
  	  
	  catch ( myExceptions $e ) {
  			print $e->getError();			
  	
	  }
	
  	}	

//  ------------------------------------------------------------------------------------------------------------------------------------------




//  ******************************************************************************************************************************************
//  4) NEWS                                                                                                                                
//  ******************************************************************************************************************************************

//  ------------------------------------------------------------------------------------------------------------------------------------------ 
// 	4.1) Create News
//  ------------------------------------------------------------------------------------------------------------------------------------------

	// cf. function createWriting()
		
//  ------------------------------------------------------------------------------------------------------------------------------------------ 
// 	4.2) Edit News
//  ------------------------------------------------------------------------------------------------------------------------------------------

	function editNews() {
		
		try {
				
			if ( $this->crud->update( $this->getTable() , $this->crud->getMatchingFields( $this->getTable() ) , 'news_id' , $_POST['news_id'] ) ) 			
			
			{ 
			
				$serialized_info = serialize( $this->WritingInfo() );	
				header( "location: " . $this->getRedir() . '&info_box=edited&serialized_info=' . $serialized_info );
				
			}
			
			else {	
				
				$this->setErrorFlag( 1 );
				throw new myExceptions( 'The news couldn\'t be edited.' );
				
			}
				
		}
		
		catch ( myExceptions $e ) {
			
			print $e->getError();	
					
		}
				
	}


	//  ------------------------------------------------------------------------------------------------------------------------------------------ 
	// 	4.3) Edit Concert
	//  ------------------------------------------------------------------------------------------------------------------------------------------

		function editConcert() {

			try {

				if ( $this->crud->update( $this->getTable() , $this->crud->getMatchingFields( $this->getTable() ) , 'concert_id' , $_POST['concert_id'] ) ) 			

				{ 

					$serialized_info = serialize( $this->WritingInfo() );	
					header( "location: " . $this->getRedir() . '&info_box=edited&serialized_info=' . $serialized_info );

				}

				else {	

					$this->setErrorFlag( 1 );
					throw new myExceptions( 'The concert couldn\'t be edited.' );

				}

			}

			catch ( myExceptions $e ) {

				print $e->getError();	

			}

		}


//  ------------------------------------------------------------------------------------------------------------------------------------------ 
// 	4.3) Delete News
//  ------------------------------------------------------------------------------------------------------------------------------------------

  	// cf. function deleteWriting()

//  ------------------------------------------------------------------------------------------------------------------------------------------



//  ******************************************************************************************************************************************
//  5) CHECKS                                                                                                                                
//  ****************************************************************************************************************************************** 

//  ------------------------------------------------------------------------------------------------------------------------------------------ 
// 	5.1) Check Title
//  ------------------------------------------------------------------------------------------------------------------------------------------

 	function checkTitle($title) {
 	
		try {
 		
			if ($title == '' )  {
 			
				$this->_error_flag = 1;
 				throw new myExceptions('There is <em>no title</em> to your writing.');
 			
			}
 		
		}
 	
		catch ( myExceptions $e ) {
 		
			return $e->getError();
 		
		}

 	}

//  ------------------------------------------------------------------------------------------------------------------------------------------ 
// 	5.2) Check Template
//  ------------------------------------------------------------------------------------------------------------------------------------------

 	function checkTemplate($template) {

		try {

			if ( $template == '0' )  {

				$this->_error_flag = 1;
 				throw new myExceptions('You can\'t select a main category template. Please <em>select a subcategory.</em>');

			}

		}

		catch ( myExceptions $e ) {

			return $e->getError();

		}

 	}


//  ------------------------------------------------------------------------------------------------------------------------------------------ 
// 	5.3) Check Category
//  ------------------------------------------------------------------------------------------------------------------------------------------

 	function checkCategory($category) {

		try {

			if ( $category == '0' )  {

				$this->_error_flag = 1;
 				throw new myExceptions('Please <em>select a news category</em>.');

			}

		}

		catch ( myExceptions $e ) {

			return $e->getError();

		}

 	}

//  ******************************************************************************************************************************************
//  6) INFO                                                                                                                                
//  ****************************************************************************************************************************************** 

//  ------------------------------------------------------------------------------------------------------------------------------------------ 
// 	6.1) Profile Info
//  ------------------------------------------------------------------------------------------------------------------------------------------

	function WritingInfo() {

	$edit_writing_info =  array( 'title' => $this->getWritingTitle() );
	
	return $edit_writing_info;
	
  }

//  ------------------------------------------------------------------------------------------------------------------------------------------  

}
?>

